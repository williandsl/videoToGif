{"ast":null,"code":"var _jsxFileName = \"/Users/wslima/projetosW/React/ReactDoZero/VideoToGif/videoToGif/video-to-gif/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport gifshot from 'gifshot';\nimport FileUploader from './FileUploader';\nimport VideoPlayer from './VideoPlayer';\nimport ProgressBar from './ProgressBar';\nimport ConvertedGif from './ConvertedGif';\nimport logo from './conv.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [videoUploaded, setVideoUploaded] = useState(false);\n  const [videoFile, setVideoFile] = useState(null);\n  const [gifUrl, setGifUrl] = useState('');\n  const [converting, setConverting] = useState(false);\n  const [conversionProgress, setConversionProgress] = useState(0);\n  const [converted, setConverted] = useState(false);\n  const [totalFrames, setTotalFrames] = useState(0);\n  const [currentFrame, setCurrentFrame] = useState(0);\n  const [blinking, setBlinking] = useState(false);\n  const [showGeneratingText, setShowGeneratingText] = useState(false);\n  const videoRef = useRef(null); // Referência para o elemento <video>\n\n  const handleFileUpload = file => {\n    resetState();\n    setVideoFile(file);\n    setVideoUploaded(true);\n  };\n  const convertToGif = () => {\n    setConverting(true);\n    setShowGeneratingText(true);\n    const video = document.createElement('video');\n    video.src = URL.createObjectURL(videoFile);\n    video.onerror = () => {\n      console.error('Erro ao carregar o vídeo');\n    };\n    video.onloadeddata = () => {\n      video.onseeked = () => {\n        const videoDuration = video.duration;\n        const frames = Math.ceil(videoDuration * 10);\n        const videoWidth = video.videoWidth;\n        const videoHeight = video.videoHeight;\n        setTotalFrames(frames);\n        setCurrentFrame(0);\n        gifshot.createGIF({\n          video: [videoFile],\n          numFrames: frames,\n          frameDuration: videoDuration / frames,\n          gifWidth: videoWidth,\n          gifHeight: videoHeight,\n          sampleInterval: 10,\n          progressCallback: currentFrame => {\n            setCurrentFrame(currentFrame * 120);\n          }\n        }, obj => {\n          if (!obj.error) {\n            const gifUrl = obj.image;\n            setGifUrl(gifUrl);\n            setConverted(true);\n          } else {\n            console.error('Erro ao converter o vídeo em GIF:', obj.error);\n          }\n          setConverting(false);\n        });\n      };\n      video.currentTime = video.duration;\n    };\n  };\n  const handleDownload = () => {\n    if (gifUrl) {\n      const link = document.createElement('a');\n      link.href = gifUrl;\n      link.download = 'video.gif';\n      link.click();\n    }\n  };\n  const resetState = () => {\n    setVideoUploaded(false);\n    setVideoFile(null);\n    setGifUrl('');\n    setConversionProgress(0);\n    setConverted(false);\n    setTotalFrames(0);\n    setCurrentFrame(0);\n    setBlinking(false);\n    setShowGeneratingText(false);\n  };\n  useEffect(() => {\n    if (converting) {\n      const progress = currentFrame / totalFrames * 100;\n      setConversionProgress(progress);\n      if (progress >= 70) {\n        setShowGeneratingText(true);\n      }\n      if (progress === 90) {\n        setConversionProgress(91);\n        const interval = setInterval(() => {\n          setConversionProgress(prevProgress => {\n            if (prevProgress < 100) {\n              return prevProgress + 1;\n            } else {\n              clearInterval(interval);\n              return prevProgress;\n            }\n          });\n        }, 3000);\n      }\n    }\n  }, [converting, currentFrame, totalFrames]);\n  useEffect(() => {\n    if (converted) {\n      window.scrollTo(0, document.body.scrollHeight);\n    }\n  }, [converted]);\n  useEffect(() => {\n    if (conversionProgress === 90) {\n      const blinkInterval = setInterval(() => {\n        setBlinking(prevState => !prevState);\n      }, 500);\n      return () => clearInterval(blinkInterval);\n    }\n  }, [conversionProgress]);\n  useEffect(() => {\n    if (showGeneratingText) {\n      const blinkInterval = setInterval(() => {\n        setBlinking(prevState => !prevState);\n      }, 500);\n      return () => clearInterval(blinkInterval);\n    }\n  }, [showGeneratingText]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Converter v\\xEDdeo em .GIF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FileUploader, {\n        onFileUpload: handleFileUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), videoUploaded && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-container\",\n        children: [converting && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          children: conversionProgress < 100 ? /*#__PURE__*/_jsxDEV(ProgressBar, {\n            progress: conversionProgress,\n            showGeneratingText: showGeneratingText,\n            blinking: blinking\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Arquivo convertido, gerando arquivo abaixo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 15\n        }, this), !converting && !converted && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: convertToGif,\n            disabled: converting,\n            children: \"Converter em GIF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(VideoPlayer, {\n          ref: videoRef,\n          videoFile: videoFile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this), converted && /*#__PURE__*/_jsxDEV(ConvertedGif, {\n          gifUrl: gifUrl,\n          onDownload: handleDownload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"EVExMmCb6JJITZrxwDMZJMHpQ9s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","gifshot","FileUploader","VideoPlayer","ProgressBar","ConvertedGif","logo","jsxDEV","_jsxDEV","App","_s","videoUploaded","setVideoUploaded","videoFile","setVideoFile","gifUrl","setGifUrl","converting","setConverting","conversionProgress","setConversionProgress","converted","setConverted","totalFrames","setTotalFrames","currentFrame","setCurrentFrame","blinking","setBlinking","showGeneratingText","setShowGeneratingText","videoRef","handleFileUpload","file","resetState","convertToGif","video","document","createElement","src","URL","createObjectURL","onerror","console","error","onloadeddata","onseeked","videoDuration","duration","frames","Math","ceil","videoWidth","videoHeight","createGIF","numFrames","frameDuration","gifWidth","gifHeight","sampleInterval","progressCallback","obj","image","currentTime","handleDownload","link","href","download","click","progress","interval","setInterval","prevProgress","clearInterval","window","scrollTo","body","scrollHeight","blinkInterval","prevState","className","children","alt","fileName","_jsxFileName","lineNumber","columnNumber","onFileUpload","onClick","disabled","ref","onDownload","_c","$RefreshReg$"],"sources":["/Users/wslima/projetosW/React/ReactDoZero/VideoToGif/videoToGif/video-to-gif/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport gifshot from 'gifshot';\nimport FileUploader from './FileUploader';\nimport VideoPlayer from './VideoPlayer';\nimport ProgressBar from './ProgressBar';\nimport ConvertedGif from './ConvertedGif';\nimport logo from './conv.png';\n\nfunction App() {\n  const [videoUploaded, setVideoUploaded] = useState(false);\n  const [videoFile, setVideoFile] = useState(null);\n  const [gifUrl, setGifUrl] = useState('');\n  const [converting, setConverting] = useState(false);\n  const [conversionProgress, setConversionProgress] = useState(0);\n  const [converted, setConverted] = useState(false);\n  const [totalFrames, setTotalFrames] = useState(0);\n  const [currentFrame, setCurrentFrame] = useState(0);\n  const [blinking, setBlinking] = useState(false);\n  const [showGeneratingText, setShowGeneratingText] = useState(false);\n  const videoRef = useRef(null); // Referência para o elemento <video>\n\n  const handleFileUpload = (file) => {\n    resetState();\n    setVideoFile(file);\n    setVideoUploaded(true);\n  };\n\n  const convertToGif = () => {\n    setConverting(true);\n    setShowGeneratingText(true);\n    const video = document.createElement('video');\n    video.src = URL.createObjectURL(videoFile);\n    video.onerror = () => {\n      console.error('Erro ao carregar o vídeo');\n    };\n\n    video.onloadeddata = () => {\n      video.onseeked = () => {\n        const videoDuration = video.duration;\n        const frames = Math.ceil(videoDuration * 10);\n        const videoWidth = video.videoWidth;\n        const videoHeight = video.videoHeight;\n\n        setTotalFrames(frames);\n        setCurrentFrame(0);\n\n        gifshot.createGIF(\n          {\n            video: [videoFile],\n            numFrames: frames,\n            frameDuration: videoDuration / frames,\n            gifWidth: videoWidth,\n            gifHeight: videoHeight,\n            sampleInterval: 10,\n            progressCallback: (currentFrame) => {\n              setCurrentFrame(currentFrame * 120);\n            },\n          },\n          (obj) => {\n            if (!obj.error) {\n              const gifUrl = obj.image;\n              setGifUrl(gifUrl);\n              setConverted(true);\n            } else {\n              console.error('Erro ao converter o vídeo em GIF:', obj.error);\n            }\n            setConverting(false);\n          }\n        );\n      };\n\n      video.currentTime = video.duration;\n    };\n  };\n\n  const handleDownload = () => {\n    if (gifUrl) {\n      const link = document.createElement('a');\n      link.href = gifUrl;\n      link.download = 'video.gif';\n      link.click();\n    }\n  };\n\n  const resetState = () => {\n    setVideoUploaded(false);\n    setVideoFile(null);\n    setGifUrl('');\n    setConversionProgress(0);\n    setConverted(false);\n    setTotalFrames(0);\n    setCurrentFrame(0);\n    setBlinking(false);\n    setShowGeneratingText(false);\n  };\n\n  useEffect(() => {\n    if (converting) {\n      const progress = (currentFrame / totalFrames) * 100;\n      setConversionProgress(progress);\n\n      if (progress >= 70) {\n        setShowGeneratingText(true);\n      }\n\n      if (progress === 90) {\n        setConversionProgress(91);\n        const interval = setInterval(() => {\n          setConversionProgress((prevProgress) => {\n            if (prevProgress < 100) {\n              return prevProgress + 1;\n            } else {\n              clearInterval(interval);\n              return prevProgress;\n            }\n          });\n        }, 3000);\n      }\n    }\n  }, [converting, currentFrame, totalFrames]);\n\n  useEffect(() => {\n    if (converted) {\n      window.scrollTo(0, document.body.scrollHeight);\n    }\n  }, [converted]);\n\n  useEffect(() => {\n    if (conversionProgress === 90) {\n      const blinkInterval = setInterval(() => {\n        setBlinking((prevState) => !prevState);\n      }, 500);\n      return () => clearInterval(blinkInterval);\n    }\n  }, [conversionProgress]);\n\n  useEffect(() => {\n    if (showGeneratingText) {\n      const blinkInterval = setInterval(() => {\n        setBlinking((prevState) => !prevState);\n      }, 500);\n      return () => clearInterval(blinkInterval);\n    }\n  }, [showGeneratingText]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <h1>Converter vídeo em .GIF</h1>\n        <FileUploader onFileUpload={handleFileUpload} />\n        {videoUploaded && (\n          <div className=\"video-container\">\n            {converting && (\n              <div className=\"progress-bar\">\n                {conversionProgress < 100 ? (\n                  <ProgressBar\n                    progress={conversionProgress}\n                    showGeneratingText={showGeneratingText}\n                    blinking={blinking}\n                  />\n                ) : (\n                  <p>Arquivo convertido, gerando arquivo abaixo</p>\n                )}\n              </div>\n            )}\n\n            {!converting && !converted && (\n              <p>\n                <button onClick={convertToGif} disabled={converting}>\n                  Converter em GIF\n                </button>\n              </p>\n            )}\n            <VideoPlayer ref={videoRef} videoFile={videoFile} />\n\n            {converted && (\n              <ConvertedGif gifUrl={gifUrl} onDownload={handleDownload} />\n            )}\n          </div>\n        )}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}